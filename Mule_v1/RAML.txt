
####### PETICION METODO PAGO #######

POST : http://localhost:8082/Payment

ENTRADA JSON
{
      "first_name": "Jon",
      "last_name": "Doe",
      "bank_routing_number": "021000021",
      "bank_account_number": "9876543210",
      "bank_account_type": "checking",
      "bank_account_holder_type": "personal"
}


JSON SALIDA
{
    "transaction": {
        "token": "PQb2a5fINi688Jg5ccqo03ySqvU",
        "created_at": "2020-05-11T20:57:38Z",
        "updated_at": "2020-05-11T20:57:38Z",
        "succeeded": true,
        "transaction_type": "AddPaymentMethod",
        "retained": false,
        "state": "succeeded",
        "message_key": "messages.transaction_succeeded",
        "message": "Succeeded!",
        "payment_method": {
            "token": "FuvT4BiUN1kZxlAHxuHb9jI4nvK",
            "created_at": "2020-05-11T20:57:38Z",
            "updated_at": "2020-05-11T20:57:38Z",
            "email": null,
            "data": null,
            "storage_state": "cached",
            "test": true,
            "metadata": null,
            "callback_url": null,
            "full_name": "Jon Doe",
            "bank_name": null,
            "account_type": "checking",
            "account_holder_type": "personal",
            "routing_number_display_digits": "021",
            "account_number_display_digits": "3210",
            "first_name": "Jon",
            "last_name": "Doe",
            "address1": null,
            "address2": null,
            "city": null,
            "state": null,
            "zip": null,
            "country": null,
            "phone_number": null,
            "company": null,
            "payment_method_type": "bank_account",
            "errors": [],
            "routing_number": "021*",
            "account_number": "*3210"
        }
    }

"ESTO NOS GENERA TOKEN DE'METODO DE PAGO' EL CUAL COPIAREMOS, QUE ESTA DENTRO DEL PAY_METHOD"


### COMPRA CON METODO PAGO ### 
POST: http://localhost:8082/compra
ENTRADA JSON
{
    "payment_method_token": "Cp5h5dAq4TDYjGIwU8OqkBlDTz1",
    "amount": 100,
    "currency_code": "USD"
}

SALIDA JSON
{
    "transaction": {
        "on_test_gateway": true,
        "created_at": "2020-05-11T20:54:49Z",
        "updated_at": "2020-05-11T20:54:49Z",
        "succeeded": true,
        "state": "succeeded",
        "token": "3H6A8igl6wuMQcGnCJJ2ptc949z",
        "transaction_type": "Purchase",
        "order_id": null,
        "ip": null,
        "description": null,
        "email": null,
        "merchant_name_descriptor": null,
        "merchant_location_descriptor": null,
        "gateway_specific_fields": null,
        "gateway_specific_response_fields": {},
        "gateway_transaction_id": "57",
        "gateway_latency_ms": 31,
        "stored_credential_initiator": null,
        "stored_credential_reason_type": null,
        "warning": null,
        "amount": 100,
        "currency_code": "USD",
        "retain_on_success": false,
        "payment_method_added": false,
        "dynamically_routed": false,
        "routing": null,
        "message_key": "messages.transaction_succeeded",
        "message": "Succeeded!",
        "gateway_token": "692bGGx77NHdwJv1llg2BbPSpgh",
        "gateway_type": "test",
        "response": {
            "success": true,
            "message": "Successful purchase",
            "avs_code": null,
            "avs_message": null,
            "cvv_code": null,
            "cvv_message": null,
            "pending": false,
            "result_unknown": false,
            "error_code": null,
            "error_detail": null,
            "cancelled": false,
            "fraud_review": null,
            "created_at": "2020-05-11T20:54:49Z",
            "updated_at": "2020-05-11T20:54:49Z"
        },
        "shipping_address": {
            "name": null,
            "address1": null,
            "address2": null,
            "city": null,
            "state": null,
            "zip": null,
            "country": null,
            "phone_number": null
        },
        "api_urls": [
            {
                "referencing_transaction": []
            },
            {
                "failover_transaction": []
            }
        ],
        "attempt_3dsecure": false,
        "payment_method": {
            "token": "Cp5h5dAq4TDYjGIwU8OqkBlDTz1",
            "created_at": "2020-05-11T20:54:39Z",
            "updated_at": "2020-05-11T20:54:39Z",
            "email": null,
            "data": null,
            "storage_state": "cached",
            "test": true,
            "metadata": null,
            "callback_url": null,
            "full_name": "Jon Doe",
            "bank_name": null,
            "account_type": "checking",
            "account_holder_type": "personal",
            "routing_number_display_digits": "021",
            "account_number_display_digits": "3210",
            "first_name": "Jon",
            "last_name": "Doe",
            "address1": null,
            "address2": null,
            "city": null,
            "state": null,
            "zip": null,
            "country": null,
            "phone_number": null,
            "company": null,
            "payment_method_type": "bank_account",
            "errors": [],
            "routing_number": "021*",
            "account_number": "*3210"
        }
    }
}

"COPIAMOS EL TOKEN QUE NOS GENERO EL METODO PAGO (EL QUE ESTA DENTRO DE PAY_METHOD) Y LO COLOCAMOS DENTRO DEL JSON
DE 'POSTMA',EN LA PARTE DE  "payment_method_token": 
LO ENVIAMOS Y  'NOS GENERARA UNA TRANSACCION EXITOSA' SI LE DAMOS DE NUEVO
NOS MARCARA ERROR YA QUE SOLO SE PUEDE USAR UNA VEZ EL METODO"






### TOKEN DE PAGO QUE SE USE VARIAS VECES 'TRANSACCION' ###
POST : http://localhost:8082/transaccion
INPUT
{
    "transaction_token": "3H6A8igl6wuMQcGnCJJ2ptc949z",
    "amount": 128999
}

SALIDA
{
    "transaction": {
        "on_test_gateway": true,
        "created_at": "2020-05-11T20:55:00Z",
        "updated_at": "2020-05-11T20:55:00Z",
        "succeeded": true,
        "state": "succeeded",
        "token": "UVqGFlRu6YSSdl7wBb5GqzHb02a",
        "transaction_type": "PurchaseViaReference",
        "order_id": null,
        "ip": null,
        "description": null,
        "email": null,
        "merchant_name_descriptor": null,
        "merchant_location_descriptor": null,
        "gateway_specific_fields": null,
        "gateway_specific_response_fields": {},
        "gateway_transaction_id": "49",
        "gateway_latency_ms": 0,
        "stored_credential_initiator": null,
        "stored_credential_reason_type": null,
        "warning": null,
        "amount": 128999,
        "currency_code": "USD",
        "message_key": "messages.transaction_succeeded",
        "message": "Succeeded!",
        "gateway_token": "692bGGx77NHdwJv1llg2BbPSpgh",
        "gateway_type": "test",
        "response": {
            "success": true,
            "message": "Successful purchase",
            "avs_code": null,
            "avs_message": null,
            "cvv_code": null,
            "cvv_message": null,
            "pending": false,
            "result_unknown": false,
            "error_code": null,
            "error_detail": null,
            "cancelled": false,
            "fraud_review": null,
            "created_at": "2020-05-11T20:55:00Z",
            "updated_at": "2020-05-11T20:55:00Z"
        },
        "shipping_address": {
            "name": null,
            "address1": null,
            "address2": null,
            "city": null,
            "state": null,
            "zip": null,
            "country": null,
            "phone_number": null
        },
        "api_urls": [],
        "reference_token": "3H6A8igl6wuMQcGnCJJ2ptc949z"
    }
}


POSTMAN
"SOLO TENEMOS QUE OBTENER UNA TRANSACCION EXITOSA, COPIAMOS EL TOKEN Y LO COLOCAMOS DENTRO DEL BODY DE 'POSTMAN'
EN LA PARTE DE '"transaction_token"' Y PODEMOS HACER LA SOLICITUDES QUE QUIERAMOS"

MULESOFT
DENTRO DE REQUEST 'TRANSACCION' EN LA PARTE DEL PATH SE LE AGREGO '{token_transaction}' A LA URL ADEMAS DE AGREGARLE EN LOS
'URI PARAMTS' "token_transaction" HACIENO REFERENCIA AL PATH Y SE LE AGREGO payload.transaction.transaction_token,
QUE ES EL VALOR DEL TOKEN DINAMICO, PARA QUE PUEDA OBTENER EL'TOKEN DE TRANSACCION QUE LE MANDA POSTMAN, SI EL TOKEN 
INGRESADO NO ES EXITOSO DARA ERROR.

